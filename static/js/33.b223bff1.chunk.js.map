{"version":3,"file":"static/js/33.b223bff1.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nexport const Info = styled.div`\n    display: flex;\n    gap: 20px\n`\nexport const Meta = styled.div`\n & :not(:last-child) {\n    margin-bottom: 20px\n }\n`\nexport const Poster =  styled.img`\n    height: 500px\n`\nexport const Tabs = styled.div`\n    display: flex;\n    gap: 10px;\n    justify-content: center;\n`\nexport const Tab = styled(NavLink)`\n    color: black;\n    text-decoration: none;\n    padding: 5px 0;\n\n    &.active{\n        border-bottom: 2px solid orange\n    }\n`\n\nexport const Genres = styled.ul`\n    padding: 0;\n    list-style: none;\n    display: flex;\n    gap: 5px\n`","import { useEffect, useState, Suspense } from \"react\"\nimport { Link, Outlet, useParams, useLocation} from \"react-router-dom\"\nimport { getMovieById } from \"services/api\"\n\nimport { Info, Poster, Meta, Tab, Tabs, Genres } from \"./MovieDetails.styled\"\n\nconst MovieDetails = () => {\n    \n    const [title, setTitle] = useState('')\n    const [posterLink, setPosterLink] = useState('')\n    const [overview, setOverview] = useState('')\n    const [genres, setGenres] = useState([])\n    const [year, setYear] = useState([])\n    const [backLink, setBackLink] = useState(null)\n    const location = useLocation()\n    const {movieId} = useParams()\n\n    useEffect(() => {\n        if(backLink) return\n\n        setBackLink(location.state?.from ?? '/')\n    }, [backLink, location.state?.from])\n\n\n    useEffect(() => {\n        getMovieById(movieId).then(({data}) => {\n            const {title, poster_path, overview, genres, release_date} = data\n\n            setTitle(title)\n            setPosterLink(poster_path)\n            setOverview(overview)\n            setGenres(genres)\n            setYear(release_date.slice(0, 4))\n        })                                                                  \n    }, [movieId])\n\n    return(\n        <div>\n            <Link to={backLink}>Back to movies</Link>\n            <Info>\n            <Poster src={`https://image.tmdb.org/t/p/original/${posterLink}`} alt={`${title} poster`} />\n            <Meta>\n                {title && <h1>{title}</h1>}\n                {year && <p>{year}</p>}\n                {overview && \n                <>\n                    <h3>Overview:</h3>\n                    <p>{overview}</p>\n                </>}\n                {genres.length !== 0 && <> <h3>Genres:</h3>\n                <Genres>\n                    {genres.map(({name, id}) => <li key={id}>{name}</li>)}\n                </Genres></> }\n            </Meta>\n            </Info>\n            <Tabs>\n                <Tab to={`/movies/${movieId}/cast`}>Cast</Tab>\n                <Tab to={`/movies/${movieId}/reviews`}>Reviews</Tab>\n            </Tabs>\n            <Suspense fallback={<p>Loading page</p>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails\n\n","import axios from \"axios\"\n\nconst params = {\n    KEY: '2f71ced57cfdbcfd1afc0d530836b37a',\n    BASE_URL: 'https://api.themoviedb.org/3'\n}\n\nexport const getTrendingMovies = () => {\n    const {KEY, BASE_URL} = params\n\n    const data = axios.get(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieById = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieCast = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieReviews = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieBySearchQuery = (query) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`)\n    return data\n}"],"names":["Info","styled","Meta","Poster","Tabs","Tab","NavLink","Genres","useState","title","setTitle","posterLink","setPosterLink","overview","setOverview","genres","setGenres","year","setYear","backLink","setBackLink","location","useLocation","movieId","useParams","useEffect","state","from","getMovieById","then","data","poster_path","release_date","slice","to","src","alt","length","map","name","id","Suspense","fallback","params","getTrendingMovies","KEY","BASE_URL","axios","getMovieCast","getMovieReviews","getMovieBySearchQuery","query"],"sourceRoot":""}