{"version":3,"file":"static/js/209.c9c4d5de.chunk.js","mappings":"iPAEaA,EAASC,EAAAA,GAAAA,GAAH,qEAKNC,EAAOD,EAAAA,GAAAA,IAAH,+J,SCLJE,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,EAA+BD,EAA/BC,OAAQC,EAAuBF,EAAvBE,WAAYC,EAAWH,EAAXG,QAC3B,OACI,2BACI,UAACL,EAAD,YACI,SAACF,EAAD,UAASK,KACT,uBAAIC,EAAWE,MAAM,EAAG,UAE5B,uBAAID,MAGf,ECaD,EApBgB,WACZ,IAAOE,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,YAAa,IAAXC,EAAU,EAAVA,KAC5BJ,EAAWI,EAAKC,QACnB,GACJ,GAAE,CAACT,KAEA,yBACuB,IAAnBG,EAAQO,QAAe,uCAAoB,wBACtCP,EAAQQ,KAAI,SAAAhB,GAAM,OACnB,SAACD,EAAD,CAAYC,OAAQA,GAAaA,EAAOiB,GADrB,OAMlC,C,oKCtBKC,EACG,mCADHA,EAEQ,+BAGDC,EAAoB,WAC7B,IAAOC,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,qCAAkDD,GAElE,EAEYG,EAAe,SAACN,GACzB,IAAOG,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BJ,EAA/B,oBAA6CG,GAE7D,EAEYI,EAAe,SAACP,GACzB,IAAOG,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BJ,EAA/B,4BAAqDG,GAErE,EAEYT,EAAkB,SAACM,GAC5B,IAAOG,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BJ,EAA/B,4BAAqDG,GAErE,EAEYK,EAAwB,SAACC,GAClC,IAAON,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iCAA8CD,EAA9C,kBAA2DM,GAE3E,C","sources":["components/ReviewCard/ReviewCard.styled.js","components/ReviewCard/ReviewCard.jsx","pages/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Author = styled.h3`\n    display: block;\n    margin-right: 10px\n`\n\nexport const Meta = styled.div`\n    display: flex;\n    align-items: baseline;\n    // justify-content: space-between\n    margin-bottom: 20px;\n    margin-top: 20px\n`","import { Meta, Author } from \"./ReviewCard.styled\"\nimport PropTypes from 'prop-types';\nexport const ReviewCard = ({review}) => {\n    const {author, created_at, content} = review\n    return(\n        <li>\n            <Meta>\n                <Author>{author}</Author>\n                <p>{created_at.slice(0, 10)}</p>\n            </Meta>\n            <p>{content}</p>\n        </li>\n    )\n}\n\nReviewCard.propTypes = {\n    review: PropTypes.object.isRequired\n}","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { getMovieReviews } from \"services/api\"\n\nimport { ReviewCard } from \"components/ReviewCard/ReviewCard\"\n\nconst Reviews = () => {\n    const {movieId} = useParams()\n    const [reviews, setReviews] = useState([])\n\n    useEffect(() => {\n        getMovieReviews(movieId).then(({data}) => {\n            setReviews(data.results)\n        })\n    }, [movieId])\n    return (\n        <div>\n           {reviews.length === 0 ? <p>No reviews</p> : <ul>\n                {reviews.map(review =>\n                <ReviewCard review={review} key={review.id}/>)\n                }\n            </ul>} \n        </div>\n    )\n}\n\nexport default Reviews\n","import axios from \"axios\"\n\nconst params = {\n    KEY: '2f71ced57cfdbcfd1afc0d530836b37a',\n    BASE_URL: 'https://api.themoviedb.org/3'\n}\n\nexport const getTrendingMovies = () => {\n    const {KEY, BASE_URL} = params\n\n    const data = axios.get(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieById = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieCast = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieReviews = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieBySearchQuery = (query) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`)\n    return data\n}"],"names":["Author","styled","Meta","ReviewCard","review","author","created_at","content","slice","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","data","results","length","map","id","params","getTrendingMovies","KEY","BASE_URL","axios","getMovieById","getMovieCast","getMovieBySearchQuery","query"],"sourceRoot":""}