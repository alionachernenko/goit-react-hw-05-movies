{"version":3,"file":"static/js/524.573fe4b9.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,GAAAA,GAAH,4GAQJC,EAAWD,EAAAA,GAAAA,IAAH,sF,kBCPRE,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAChBC,EAAsBD,EAAtBC,aAAcC,EAAQF,EAARE,KAErB,OACI,UAACN,EAAD,YACI,SAACE,EAAD,CAAUK,IAAKF,EAAY,8CAA0CA,EAA1C,KAA4DG,EAAaC,IAAG,UAAKH,EAAL,gBACvG,uBAAIA,MAGf,ECYD,EAnBa,WACT,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAQP,OANAE,QAAQC,KAAIF,EAAAA,EAAAA,QACZG,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACzBR,EAAQQ,EAAKT,KAChB,GACJ,GAAE,CAACE,KAEA,yBACqB,IAAhBF,EAAKU,QAAe,wBAChBV,EAAKW,KAAI,SAAAlB,GAAK,OAAI,SAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMmB,GAAxC,OACX,oCAGnB,C,oKCpBKC,EACG,mCADHA,EAEQ,+BAGDC,EAAoB,WAC7B,IAAOC,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,qCAAkDD,GAElE,EAEYG,EAAe,SAACN,GACzB,IAAOG,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BJ,EAA/B,oBAA6CG,GAE7D,EAEYR,EAAe,SAACK,GACzB,IAAOG,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BJ,EAA/B,4BAAqDG,GAErE,EAEYI,EAAkB,SAACP,GAC5B,IAAOG,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BJ,EAA/B,4BAAqDG,GAErE,EAEYK,EAAwB,SAACC,GAClC,IAAON,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iCAA8CD,EAA9C,kBAA2DM,GAE3E,C","sources":["components/ActorCard/ActorCard.styled.js","components/ActorCard/ActorCard.jsx","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const Card = styled.li`\n    display: flex;\n\n    &:not(:last-child) {\n        margin-bottom: 10px\n    }\n`\n\nexport const Portrait = styled.img`\n    width: 200px;\n    height: auto;\n    margin-right: 20px\n`","import { Card, Portrait } from './ActorCard.styled'\nimport PropTypes from 'prop-types';\nimport placeholder from '../../images/placeholder.png'\nexport const ActorCard = ({actor}) => {\n    const {profile_path, name} = actor\n\n    return(\n        <Card>\n            <Portrait src={profile_path ? `https://image.tmdb.org/t/p/original/${profile_path} ` : placeholder} alt={`${name} portrait`} />\n            <p>{name}</p>\n        </Card>\n    )\n}\n\nActorCard.propTypes = {\n    actor: PropTypes.object.isRequired,\n}","import { getMovieCast } from \"services/api\"\nimport { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { ActorCard } from \"components/ActorCard/ActorCard\"\n\nconst Cast = () => {\n    const [cast, setCast] = useState([])\n    const {movieId} = useParams()\n\n    console.log(useParams())\n    useEffect(() => {\n        getMovieCast(movieId).then(({data}) => {\n            setCast(data.cast)\n        })\n    }, [movieId])\n    return(\n        <div>\n            {cast.length !== 0 ? <ul>\n                {cast.map(actor => <ActorCard actor={actor} key={actor.id}/>)}\n            </ul> : <p>No info</p>}\n        </div>\n    )\n}\n\nexport default Cast\n","import axios from \"axios\"\n\nconst params = {\n    KEY: '2f71ced57cfdbcfd1afc0d530836b37a',\n    BASE_URL: 'https://api.themoviedb.org/3'\n}\n\nexport const getTrendingMovies = () => {\n    const {KEY, BASE_URL} = params\n\n    const data = axios.get(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieById = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieCast = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieReviews = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieBySearchQuery = (query) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`)\n    return data\n}"],"names":["Card","styled","Portrait","ActorCard","actor","profile_path","name","src","placeholder","alt","useState","cast","setCast","movieId","useParams","console","log","useEffect","getMovieCast","then","data","length","map","id","params","getTrendingMovies","KEY","BASE_URL","axios","getMovieById","getMovieReviews","getMovieBySearchQuery","query"],"sourceRoot":""}