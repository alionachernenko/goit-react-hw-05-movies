{"version":3,"file":"static/js/753.8987dcc9.chunk.js","mappings":"oMAEaA,EAAOC,EAAAA,GAAAA,GAAH,uJ,iBCAJC,EAAOD,EAAAA,GAAAA,GAAH,2IAMJE,EAASF,EAAAA,GAAAA,IAAH,4JAQNG,EAAQH,EAAAA,GAAAA,EAAH,iE,kBCZLI,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjBC,GAAWC,EAAAA,EAAAA,MACVC,EAAgCH,EAAhCG,YAAaC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,MAAOC,EAAMN,EAANM,GAEjC,OACQ,SAACV,EAAD,WACI,UAAC,KAAD,CAAMW,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAAYS,MAAO,CAACC,eAAgB,QAA9E,WACI,SAACd,EAAD,CAAQe,IAAqB,OAAhBT,EAAA,8CAA8DA,GAAgBU,EAAaC,IAAG,UAAKV,EAAL,cAC3G,SAACN,EAAD,UAAQM,GAAcC,QAIzC,ECZYU,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACvB,OACI,SAACtB,EAAD,UACKsB,EAAOC,KAAI,SAAAjB,GAAK,OAAI,SAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMM,GAAxC,KAG5B,C,iHCRYY,EAAQvB,EAAAA,GAAAA,KAAJ,iDAIJwB,EAAQxB,EAAAA,GAAAA,MAAH,8IAQLyB,EAASzB,EAAAA,GAAAA,OAAH,2J,SCZN0B,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAExB,OACI,UAACJ,EAAD,CAAMI,SAAU,SAACC,GACb,IAAOC,EAASD,EAAEE,OAAOC,SAAlBF,MAEPF,EAASC,EAAGC,EAAMG,MACjB,EAJL,WAKI,SAACR,EAAD,CAAOS,KAAK,OAAOxB,KAAK,WACxB,SAACgB,EAAD,uBAGX,E,0BCuBD,EA9Be,WACX,OAA0CS,EAAAA,EAAAA,YAA1C,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAaH,EAAaI,IAAI,SAEjCD,IAAYE,EAAAA,EAAAA,IAAsBF,GAAYG,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACpDT,EAAiBS,EAAKC,QACzB,GACJ,GAAE,CAACR,IAYJ,OACI,iCACA,SAACZ,EAAD,CAAYC,SAZK,SAACC,EAAGC,GACrBD,EAAEmB,iBAEFR,EAA0B,KAAVV,EAAe,CAACA,MAAOA,EAAMmB,QAAU,CAAC,IAExDL,EAAAA,EAAAA,IAAsBd,EAAMmB,QAAQJ,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACvCT,EAAiBS,EAAKC,QACzB,GACJ,IAKIX,IAAiB,SAACf,EAAA,EAAD,CAAWC,OAAQc,MAG5C,C,4ICjCKc,EACG,mCADHA,EAEQ,+BAGDC,EAAoB,WAC7B,IAAOC,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,qCAAkDD,GAElE,EASYG,EAAe,SAAC3C,GACzB,IAAOwC,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BzC,EAA/B,4BAAqDwC,GAErE,EAEYI,EAAkB,SAAC5C,GAC5B,IAAOwC,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BzC,EAA/B,4BAAqDwC,GAErE,EAEYR,EAAwB,SAACd,GAClC,IAAOsB,EAAiBF,EAAZG,EAAYH,EAGxB,OADaI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iCAA8CD,EAA9C,kBAA2DtB,GAE3E,C","sources":["components/MovieList/MovieList.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n    padding: 0;\n    justify-content: center\n`","import styled from \"styled-components\";\n\nexport const Card = styled.li`\n    width: calc((90vw - 60px) / 3);\n    background-color: aliceblue;\n    min-height: 100%;\n    display: block;\n`\nexport const Poster = styled.img `\n    width: 100%;\n    object-fit: cover;\n    height: auto;\n    // min-height: 90%;\n    display: block;\n    margin-bottom: 10px\n`\nexport const Title = styled.p`\n    color: black;\n    font-weight: 500\n`\n\n","import { Link, useLocation } from \"react-router-dom\"\nimport { Card, Poster, Title } from \"./MovieCard.styled\"\nimport placeholder from '../../images/placeholder.png'\nimport PropTypes from 'prop-types';\nexport const MovieCard = ({movie}) => {\n    const location = useLocation()\n    const {poster_path, name, title, id} = movie\n\n    return (\n            <Card>\n                <Link to={`/movies/${id}`} state={{ from: location }} style={{textDecoration: 'none'}}>\n                    <Poster src={poster_path !== null ? `https://image.tmdb.org/t/p/original/${poster_path}` : placeholder} alt={`${name} poster`} />\n                    <Title>{name ? name : title}</Title>\n                </Link>\n            </Card>\n    )\n}\n\nMovieCard.propTypes ={\n    movie: PropTypes.object.isRequired\n}","import { List } from \"./MovieList.styled\"\nimport { MovieCard } from \"components/MovieCard/MovieCard\"\nimport PropTypes, { object } from 'prop-types';\n\nexport const MovieList = ({movies}) => { \n    return (\n        <List>\n            {movies.map(movie => <MovieCard movie={movie} key={movie.id}/>)}\n        </List>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(object).isRequired\n}","import styled from \"styled-components\";\n\nexport const Form =  styled.form`\n    text-align: center;\n`\n\nexport const Input = styled.input`\n    border-radius: 20px;\n    border: 1px solid orange;\n    width: 500px;\n    height: 20px;\n    margin-right: 5px\n`\n\nexport const Button = styled.button`\n    background-color: orange;\n    border-radius: 10px;\n    color: white;\n    border: 1px solid orange;\n    padding: 5px 10px;\n`","import { Form, Input, Button } from \"./SearchForm.styled\"\nimport PropTypes from 'prop-types';\nexport const SearchForm = ({onSubmit}) => {\n    \n    return(\n        <Form onSubmit={(e) => {\n            const {query} = e.target.elements\n\n            onSubmit(e, query.value)\n            }}>\n            <Input type=\"text\" name='query' />\n            <Button>Search</Button>\n        </Form>\n    )\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func\n}","import { MovieList } from \"components/MovieList/MovieList\"\nimport { SearchForm } from \"components/SearchForm/SearchForm\"\n\nimport { useEffect, useState } from \"react\"\nimport { getMovieBySearchQuery } from \"services/api\"\nimport { useSearchParams } from \"react-router-dom\"\n\nconst Movies = () => {\n    const [searchResults, setSearchResults] = useState()\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    useEffect(() => {\n        const movieTitle = searchParams.get('query')\n\n        if(movieTitle) getMovieBySearchQuery(movieTitle).then(({data}) => {\n            setSearchResults(data.results)\n        })\n    }, [searchParams])\n\n    const onFormSubmit = (e, query) => { \n        e.preventDefault()\n\n        setSearchParams(query !== '' ? {query: query.trim()} : {})\n\n        getMovieBySearchQuery(query.trim()).then(({data}) => {\n            setSearchResults(data.results)\n        })\n    }\n\n    return(\n        <>\n        <SearchForm onSubmit={onFormSubmit}/>\n        {searchResults && <MovieList movies={searchResults}/>}\n        </>\n    )\n}\n\nexport default Movies","import axios from \"axios\"\n\nconst params = {\n    KEY: '2f71ced57cfdbcfd1afc0d530836b37a',\n    BASE_URL: 'https://api.themoviedb.org/3'\n}\n\nexport const getTrendingMovies = () => {\n    const {KEY, BASE_URL} = params\n\n    const data = axios.get(`${BASE_URL}/trending/all/day?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieById = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieCast = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieReviews = (id) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`)\n    return data\n}\n\nexport const getMovieBySearchQuery = (query) => {\n    const {KEY, BASE_URL} = params\n    \n    const data = axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`)\n    return data\n}"],"names":["List","styled","Card","Poster","Title","MovieCard","movie","location","useLocation","poster_path","name","title","id","to","state","from","style","textDecoration","src","placeholder","alt","MovieList","movies","map","Form","Input","Button","SearchForm","onSubmit","e","query","target","elements","value","type","useState","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","getMovieBySearchQuery","then","data","results","preventDefault","trim","params","getTrendingMovies","KEY","BASE_URL","axios","getMovieCast","getMovieReviews"],"sourceRoot":""}